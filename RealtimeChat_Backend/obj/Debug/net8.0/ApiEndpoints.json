[
  {
    "ContainingType": "RealtimeChat.Controllers.AuthenticationController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Authentication/GetAllUsers/{loggedInUser}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loggedInUser",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.AuthenticationController",
    "Method": "LoginUser",
    "RelativePath": "api/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RealtimeChat.Models.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.AuthenticationController",
    "Method": "registerUser",
    "RelativePath": "api/Authentication/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RealtimeChat.Models.RegisterModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.ChatController",
    "Method": "SaveMessage",
    "RelativePath": "api/Chat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "message",
        "Type": "RealtimeChat.Models.Messages",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.ChatController",
    "Method": "GetMessages",
    "RelativePath": "api/Chat/{From}/{user}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "From",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.ChatController",
    "Method": "GetGroupMessages",
    "RelativePath": "api/Chat/getGroupMessages/{groupName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.ChatController",
    "Method": "SaveGroupChats",
    "RelativePath": "api/Chat/groupChat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "group",
        "Type": "RealtimeChat.Models.Group_chats",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.SeenController",
    "Method": "MarkSeen",
    "RelativePath": "api/Seen/messages/mark-seen",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RealtimeChat.Models.SeenUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.SeenController",
    "Method": "GetUnreadCounts",
    "RelativePath": "api/Seen/messages/unread-counts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.SeenController",
    "Method": "UpdateStatus",
    "RelativePath": "api/Seen/messages/update-status",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "RealtimeChat.Models.StatusUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RealtimeChat.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[RealtimeChat.WeatherForecast, RealtimeChat, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]